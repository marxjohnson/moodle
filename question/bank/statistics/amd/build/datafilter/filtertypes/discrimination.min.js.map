{"version":3,"file":"discrimination.min.js","sources":["../../../src/datafilter/filtertypes/discrimination.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Discrimination index filter.\n *\n * @module     qbank_statistics/datafilter/filtertypes/discrimination\n * @copyright  2022 Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Autocomplete from 'core/form-autocomplete';\nimport Range from 'core/datafilter/filtertypes/range';\nimport Selectors from 'core/datafilter/selectors';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\n\nconst INTERPRETATION = {\n    VALUES: {\n        'Very good discrimination': 1,\n        'Adequate discrimination': 2,\n        'Weak discrimination': 3,\n        'Very weak discrimination': 4,\n        'Question probably invalid': 5,\n    },\n    RANGES: {\n        '0': '',\n        '1': '49',\n        '2': '30-49',\n        '3': '20-29',\n        '4': '0-19',\n        '5': '0'\n    }\n};\n\nexport default class extends Range {\n    constructor(filterType, filterSet, initialValues, filterRange) {\n        super(filterType, filterSet, initialValues, filterRange, 'number');\n        this.interpretation = false;\n    }\n\n    /**\n     * Sets up base range UI.\n     *\n     * @param {string} type Type of input desired.\n     */\n    async setUpRangeUi(type) {\n        super.setUpRangeUi(type).then(() => {\n            this.displayRadio();\n            return;\n        }).catch();\n    }\n\n    /**\n     * Displays radio inputs.\n     *\n     */\n    displayRadio() {\n        const filterRange = this.filterRoot.querySelector(Selectors.filter.regions.range);\n        const filterInterpretation = document.createElement('div');\n        filterInterpretation.setAttribute('data-filterregion', 'interpretation');\n        filterInterpretation.setAttribute('class', 'my-1');\n        Templates.render('qbank_statistics/discrimination_index_radio', {})\n        .then((html) => {\n            filterInterpretation.innerHTML = html;\n            filterRange.parentNode.insertBefore(filterInterpretation, filterRange);\n            return;\n        })\n        .then(() =>{\n            this.discriminationRadioListenner();\n            return;\n        })\n        .catch();\n    }\n\n    /**\n     * Adds listenner on radio inputs.\n     *\n     */\n    async discriminationRadioListenner() {\n        const placeholderOne = await this.placeholderOne;\n        const placeholderTwo = await this.placeholderTwo;\n        const interpretationPlaceholder = await this.interpretationPlaceholder;\n        const filterRange = this.filterRoot.querySelector(Selectors.filter.regions.range);\n        const discriminationSelect = document.getElementById('discriminationselect');\n        discriminationSelect.addEventListener('change', (e) => {\n            if (e.target.value === 'interpretation') {\n                filterRange.setAttribute('class', 'd-none');\n                this.interpretation = true;\n                const dataSource = this.filterRoot.querySelector('#rangeValue1');\n                const inputHide = document.getElementById('rangeValue2');\n                if (inputHide !== null) {\n                    inputHide.setAttribute('class', 'd-none');\n                }\n\n                for (const [key, value] of Object.entries(INTERPRETATION.VALUES)) {\n                    let selectedOption;\n                    selectedOption = document.createElement('option');\n                    selectedOption.value = value;\n                    selectedOption.innerHTML = key;\n                    dataSource.append(selectedOption);\n                }\n                Autocomplete.enhance(\n                    dataSource,\n                    false,\n                    null,\n                    interpretationPlaceholder,\n                    false,\n                    true,\n                    null,\n                    true,\n                    {\n                        layout: 'core/datafilter/autocomplete_layout',\n                        selection: 'core/datafilter/autocomplete_selection',\n                    }\n                );\n            }\n            if (e.target.value === 'index') {\n                filterRange.removeAttribute('class');\n                this.interpretation = false;\n                const context = {\n                    placeholderone: placeholderOne,\n                    type: 'number'\n                };\n                if (this.rangetype === 2) {\n                    context.placeholdertwo = placeholderTwo;\n                }\n                this.displayRange(context);\n            }\n        });\n    }\n\n    /**\n     * Get the placeholder for range value one.\n     *\n     * @return {Promise} Promise resolving string\n     */\n    get placeholderOne() {\n        return getString('firstplaceholder', 'qbank_statistics');\n    }\n\n    /**\n     * Get the placeholder for range value two.\n     *\n     * @return {Promise} Promise resolving string\n     */\n    get placeholderTwo() {\n        return getString('secondplaceholder', 'qbank_statistics');\n    }\n\n    /**\n     * Get the placeholder for interpretation.\n     *\n     * @return {Promise} Promise resolving string\n     */\n    get interpretationPlaceholder() {\n        return getString('interpretationplaceholder', 'qbank_statistics');\n    }\n\n    /**\n     * Get selected option when interpretation selected.\n     *\n     * @returns {Number}\n     */\n    get selectedOption() {\n        const activeValueNode = this.filterRoot.querySelector('div[data-active-value]');\n        if (activeValueNode) {\n            return activeValueNode.dataset.activeValue;\n        } else {\n            return 0;\n        }\n\n    }\n\n    /**\n     * Get ranges when interpretation selected.\n     *\n     * @returns {Array}\n     */\n    get interpretationRanges() {\n        const range = INTERPRETATION.RANGES[this.selectedOption].split('-');\n        return [range[0], range[1]];\n    }\n\n    /**\n     * Get the list of raw values for this filter type.\n     *\n     * @returns {Array}\n     */\n    get rawValues() {\n        if (this.interpretation === true) {\n            if (this.selectedOption == 1 || this.selectedOption == 0) {\n                // After.\n                return [this.interpretationRanges[0]];\n            }\n            if (this.selectedOption == 5) {\n                // Before.\n                return [this.interpretationRanges[0]];\n            }\n            return this.interpretationRanges;\n        }\n        const rangeValue1 = document.getElementById('rangeValue1').value;\n        const values = [rangeValue1];\n        if (this.rangetype === 2) {\n            const rangeValue2 = document.getElementById('rangeValue2').value;\n            values.push(rangeValue2);\n        }\n        return values;\n    }\n\n    /**\n     * Get the type of range specified.\n     *\n     * @returns {Number}\n     */\n    get rangetype() {\n        if (this.interpretation === true) {\n            if (this.selectedOption == 1 || this.selectedOption == 0) {\n                // After.\n                return 0;\n            }\n            if (this.selectedOption == 5) {\n                // Before.\n                return 1;\n            }\n        }\n        return parseInt(this.filterRoot.querySelector(Selectors.filter.fields.range).value, 10);\n    }\n}\n"],"names":["INTERPRETATION","VALUES","RANGES","Range","constructor","filterType","filterSet","initialValues","filterRange","interpretation","type","setUpRangeUi","then","displayRadio","catch","this","filterRoot","querySelector","Selectors","filter","regions","range","filterInterpretation","document","createElement","setAttribute","render","html","innerHTML","parentNode","insertBefore","discriminationRadioListenner","placeholderOne","placeholderTwo","interpretationPlaceholder","getElementById","addEventListener","e","target","value","dataSource","inputHide","key","Object","entries","selectedOption","append","enhance","layout","selection","removeAttribute","context","placeholderone","rangetype","placeholdertwo","displayRange","activeValueNode","dataset","activeValue","interpretationRanges","split","rawValues","values","rangeValue2","push","parseInt","fields"],"mappings":";;;;;;;yRA6BMA,eAAiB,CACnBC,OAAQ,4BACwB,4BACD,wBACJ,6BACK,8BACC,GAEjCC,OAAQ,GACC,KACA,OACA,UACA,UACA,SACA,6BAIgBC,eACzBC,YAAYC,WAAYC,UAAWC,cAAeC,mBACxCH,WAAYC,UAAWC,cAAeC,YAAa,eACpDC,gBAAiB,qBAQPC,YACTC,aAAaD,MAAME,MAAK,UACrBC,kBAENC,QAOPD,qBACUL,YAAcO,KAAKC,WAAWC,cAAcC,mBAAUC,OAAOC,QAAQC,OACrEC,qBAAuBC,SAASC,cAAc,OACpDF,qBAAqBG,aAAa,oBAAqB,kBACvDH,qBAAqBG,aAAa,QAAS,2BACjCC,OAAO,8CAA+C,IAC/Dd,MAAMe,OACHL,qBAAqBM,UAAYD,KACjCnB,YAAYqB,WAAWC,aAAaR,qBAAsBd,gBAG7DI,MAAK,UACGmB,kCAGRjB,mDAQKkB,qBAAuBjB,KAAKiB,eAC5BC,qBAAuBlB,KAAKkB,eAC5BC,gCAAkCnB,KAAKmB,0BACvC1B,YAAcO,KAAKC,WAAWC,cAAcC,mBAAUC,OAAOC,QAAQC,OAC9CE,SAASY,eAAe,wBAChCC,iBAAiB,UAAWC,OACtB,mBAAnBA,EAAEC,OAAOC,MAA4B,CACrC/B,YAAYiB,aAAa,QAAS,eAC7BhB,gBAAiB,QAChB+B,WAAazB,KAAKC,WAAWC,cAAc,gBAC3CwB,UAAYlB,SAASY,eAAe,eACxB,OAAdM,WACAA,UAAUhB,aAAa,QAAS,cAG/B,MAAOiB,IAAKH,SAAUI,OAAOC,QAAQ5C,eAAeC,QAAS,KAC1D4C,eACJA,eAAiBtB,SAASC,cAAc,UACxCqB,eAAeN,MAAQA,MACvBM,eAAejB,UAAYc,IAC3BF,WAAWM,OAAOD,0CAETE,QACTP,YACA,EACA,KACAN,2BACA,GACA,EACA,MACA,EACA,CACIc,OAAQ,sCACRC,UAAW,8CAIA,UAAnBZ,EAAEC,OAAOC,MAAmB,CAC5B/B,YAAY0C,gBAAgB,cACvBzC,gBAAiB,QAChB0C,QAAU,CACZC,eAAgBpB,eAChBtB,KAAM,UAEa,IAAnBK,KAAKsC,YACLF,QAAQG,eAAiBrB,qBAExBsB,aAAaJ,aAU1BnB,4BACO,mBAAU,mBAAoB,oBAQrCC,4BACO,mBAAU,oBAAqB,oBAQtCC,uCACO,mBAAU,4BAA6B,oBAQ9CW,2BACMW,gBAAkBzC,KAAKC,WAAWC,cAAc,iCAClDuC,gBACOA,gBAAgBC,QAAQC,YAExB,EAUXC,iCACMtC,MAAQrB,eAAeE,OAAOa,KAAK8B,gBAAgBe,MAAM,WACxD,CAACvC,MAAM,GAAIA,MAAM,IAQxBwC,oBAC4B,IAAxB9C,KAAKN,sBACsB,GAAvBM,KAAK8B,gBAA8C,GAAvB9B,KAAK8B,gBAIV,GAAvB9B,KAAK8B,eAFE,CAAC9B,KAAK4C,qBAAqB,IAM/B5C,KAAK4C,2BAGVG,OAAS,CADKvC,SAASY,eAAe,eAAeI,UAEpC,IAAnBxB,KAAKsC,UAAiB,OAChBU,YAAcxC,SAASY,eAAe,eAAeI,MAC3DuB,OAAOE,KAAKD,oBAETD,OAQPT,oBAC4B,IAAxBtC,KAAKN,eAAyB,IACH,GAAvBM,KAAK8B,gBAA8C,GAAvB9B,KAAK8B,sBAE1B,KAEgB,GAAvB9B,KAAK8B,sBAEE,SAGRoB,SAASlD,KAAKC,WAAWC,cAAcC,mBAAUC,OAAO+C,OAAO7C,OAAOkB,MAAO"}
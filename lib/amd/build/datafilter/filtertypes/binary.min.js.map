{"version":3,"file":"binary.min.js","sources":["../../../src/datafilter/filtertypes/binary.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Base filter for binary selector ie: (Yes / No).\n *\n * @module     core/datafilter/filtertypes/binary\n * @author     2022 Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @copyright  2022 Catalyst IT Australia Pty Ltd\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Filter from 'core/datafilter/filtertype';\nimport Selectors from 'core/datafilter/selectors';\nimport Templates from 'core/templates';\nimport {get_strings as getStrings} from 'core/str';\n\nconst binaryOptions = {\n    '0': 'optionone',\n    '1': 'optiontwo'\n};\nexport default class extends Filter {\n    /**\n     * Add the value selector to the filter row.\n     *\n     */\n    async addValueSelector() {\n        this.getTextValues().then(() => {\n            this.displayBinarySelection();\n        }).catch(function() {\n            // Silently ignore.\n        });\n    }\n\n    /**\n     * Text values for select element.\n     *\n     * @returns {Promise}\n     */\n    getTextValues() {\n        return getStrings([\n            {key: 'no'},\n            {key: 'yes'},\n        ]).then((strings) => {\n            this.optionOne = strings[0];\n            this.optionTwo = strings[1];\n        }).catch(function() {\n            // Silently ignore.\n        });\n    }\n\n    /**\n     * Renders yes/no select input with proper selection.\n     *\n     */\n    displayBinarySelection() {\n        // We specify a specific filterset in case there are multiple filtering condition - avoiding glitches.\n        const specificFilterSet = this.rootNode.querySelector(Selectors.filter.byName(this.filterType));\n        const context = {filtertype: this.filterType, textvalueone: this.optionOne, textvaluetwo: this.optionTwo};\n        // Default selection.\n        context[binaryOptions[1]] = true;\n        // Load any URL parameter.\n        if (this.initialValues !== undefined) {\n            context[binaryOptions[1]] = false;\n            context[binaryOptions[this.initialValues[0]]] = true;\n        }\n        Templates.render('core/datafilter/filtertypes/binary_selector', context)\n        .then((binaryUi, js) => {\n            Templates.replaceNodeContents(specificFilterSet.querySelector(Selectors.filter.regions.values), binaryUi, js);\n            return;\n        }).fail();\n    }\n\n    /**\n     * Get the list of raw values for this filter type.\n     *\n     * @returns {Array}\n     */\n    get values() {\n        return this.filterRoot.querySelector(`[data-filterfield=\"${this.name}\"]`).value;\n    }\n\n}\n"],"names":["binaryOptions","Filter","getTextValues","then","displayBinarySelection","catch","key","strings","optionOne","optionTwo","specificFilterSet","this","rootNode","querySelector","Selectors","filter","byName","filterType","context","filtertype","textvalueone","textvaluetwo","undefined","initialValues","render","binaryUi","js","replaceNodeContents","regions","values","fail","filterRoot","name","value"],"mappings":";;;;;;;;uOA6BMA,cAAgB,GACb,cACA,oCAEoBC,kDAMhBC,gBAAgBC,MAAK,UACjBC,4BACNC,OAAM,eAUbH,uBACW,oBAAW,CACd,CAACI,IAAK,MACN,CAACA,IAAK,SACPH,MAAMI,eACAC,UAAYD,QAAQ,QACpBE,UAAYF,QAAQ,MAC1BF,OAAM,eASbD,+BAEUM,kBAAoBC,KAAKC,SAASC,cAAcC,mBAAUC,OAAOC,OAAOL,KAAKM,aAC7EC,QAAU,CAACC,WAAYR,KAAKM,WAAYG,aAAcT,KAAKH,UAAWa,aAAcV,KAAKF,WAE/FS,QAAQlB,cAAc,KAAM,OAEDsB,IAAvBX,KAAKY,gBACLL,QAAQlB,cAAc,KAAM,EAC5BkB,QAAQlB,cAAcW,KAAKY,cAAc,MAAO,sBAE1CC,OAAO,8CAA+CN,SAC/Df,MAAK,CAACsB,SAAUC,yBACHC,oBAAoBjB,kBAAkBG,cAAcC,mBAAUC,OAAOa,QAAQC,QAASJ,SAAUC,OAE3GI,OAQHD,oBACOlB,KAAKoB,WAAWlB,2CAAoCF,KAAKqB,YAAUC"}